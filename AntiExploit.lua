-- AntiExploit.lua  |  global RemoteEvent rate-limiter & validator
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players           = game:GetService("Players")
local Workspace         = game:GetService("Workspace")

--------------------------------------------
-- CONFIG ----------------------------------
--------------------------------------------
local WINDOW            = 5        -- seconds in a rolling window
local MAX_CALLS = {                -- per-window threshold
	ActivateBoost    = 6,
	BuyItem          = 8,
	CoinCollected    = 60,          -- coins can be frequent
	RequestRunStart  = 4,
	ServerResetRunTimer = 4,
}

local VALID_BOOSTS   = {DoubleCoins=true, LowGravity=true, Lightspeed=true}
local VALID_TABS     = {Cosmetics=true, Boosts=true}

-- distance check for CoinCollected
local MAX_COIN_DIST  = 25          -- studs from HumanoidRootPart

--------------------------------------------
-- STATE -----------------------------------
--------------------------------------------
local callLog = {}   -- [userId] = { [remoteName] = {t1,t2,...} }

--------------------------------------------
-- HELPERS ---------------------------------
--------------------------------------------
local function pruneList(list, now)
	for i = #list, 1, -1 do
		if now - list[i] > WINDOW then
			table.remove(list, i)
		end
	end
end

local function logCall(player, remoteName)
	local uid = player.UserId
	callLog[uid] = callLog[uid] or {}
	callLog[uid][remoteName] = callLog[uid][remoteName] or {}

	local now  = tick()
	local list = callLog[uid][remoteName]
	table.insert(list, now)
	pruneList(list, now)
	if #list > (MAX_CALLS[remoteName] or 20) then
		warn(("[AntiExploit] %s exceeded call limit on %s (%d within %ds)"):format(
			player.Name, remoteName, #list, WINDOW))
		player:Kick("Exploit detected: spammed "..remoteName)
	end
end

local function distanceOK(player, pos)
	local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
	if not (hrp and pos) then return false end
	return (hrp.Position - pos).Magnitude <= MAX_COIN_DIST
end

--------------------------------------------
-- MAIN HOOKS ------------------------------
--------------------------------------------
local remotesFolder = ReplicatedStorage:WaitForChild("Remotes")

for _, remote in ipairs(remotesFolder:GetChildren()) do
	if remote:IsA("RemoteEvent") then
		remote.OnServerEvent:Connect(function(player, ...)
			logCall(player, remote.Name)

			----------------------------------------------------------
			-- Argument sanity checks
			----------------------------------------------------------
			local args = {...}
			if remote.Name == "ActivateBoost" then
				local boost = args[1]
				if not VALID_BOOSTS[boost] then
					warn("[AntiExploit] Invalid boost arg from "..player.Name)
					player:Kick("Exploit: invalid boost")
				end

			elseif remote.Name == "BuyItem" then
				local tab = args[1]
				if not VALID_TABS[tab] then
					warn("[AntiExploit] Invalid shop tab from "..player.Name)
					player:Kick("Exploit: invalid shop tab")
				end

			elseif remote.Name == "CoinCollected" then
				local coinIndex, coinPos = args[1], args[2]
				if typeof(coinIndex) ~= "number" or typeof(coinPos) ~= "Vector3" then
					player:Kick("Exploit: malformed coin data")
				elseif not distanceOK(player, coinPos) then
					player:Kick("Exploit: coin too far away")
				end
			end
			-- For other remotes we only rate-limit; their own service already validates
		end)
	end
end

--------------------------------------------
-- HOUSEKEEPING ----------------------------
--------------------------------------------
Players.PlayerRemoving:Connect(function(plr)
	callLog[plr.UserId] = nil
end)
